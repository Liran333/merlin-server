name: golangci-lint
on:
  pull_request:

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read

env:
  GOPRIVATE: "github.com/openmerlin"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  golangci:
    name: lint
    runs-on: [self-hosted, Linux]
    steps:
      - uses: actions/checkout@v4
      - name: config github
        env:
          TOKEN: ${{ secrets.PKKING_PERSONAL_TOKEN }}
          USER: ${{ secrets.USER_NAME }}
        run: echo "machine github.com login $USER password $TOKEN" > ~/.netrc
      - name: golangci-lint
        uses: golangci/golangci-lint-action@master
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          #
          # Note: By default, the `.golangci.yml` file should be at the root of the repository.
          # The location of the configuration file can be changed by using `--config=`
          args: --timeout=10m

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true, then all caching functionality will be completely disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

          # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
          # install-mode: "goinstall"
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        env:
          GITHUB_AUTHENTICATION_TOKEN: ${{ secrets.PKKING_PERSONAL_TOKEN }}
        with:
          args: -exclude-dir api -exclude-dir tests ./...
      - name: Unit tests
        run: go test -race -count=1 -v ./...