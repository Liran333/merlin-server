definitions:
  activityapp.ReqToCreateActivity:
    properties:
      owner:
        type: string
      resource_index:
        type: string
      resource_type:
        type: string
      time:
        type: string
      type:
        type: string
    type: object
  activityapp.ReqToDeleteActivity:
    properties:
      resource_index:
        type: string
      resource_type:
        type: string
    type: object
  controller.ModeIds:
    properties:
      ids:
        items:
          type: string
        type: array
    type: object
  controller.ResponseData:
    properties:
      code:
        type: string
      data: {}
      msg:
        type: string
    type: object
  controller.reqToCheckPermission:
    properties:
      name:
        type: string
      owner:
        type: string
      user:
        type: string
    type: object
  controller.reqToCreateSpaceApp:
    properties:
      commit_id:
        type: string
      space_id:
        type: string
    type: object
  controller.reqToOrgDelete:
    properties:
      org_name:
        type: string
    type: object
  controller.reqToResetLabel:
    properties:
      frameworks:
        items:
          type: string
        type: array
      license:
        type: string
      tags:
        items:
          type: string
        type: array
      task:
        type: string
    type: object
  controller.reqToSetBuildIsDone:
    properties:
      commit_id:
        type: string
      logs:
        type: string
      space_id:
        type: string
      success:
        type: boolean
    type: object
  controller.reqToSetStatus:
    properties:
      commit_id:
        type: string
      space_id:
        type: string
      status:
        type: string
    type: object
  controller.reqToUpdateBuildInfo:
    properties:
      commit_id:
        type: string
      log_url:
        type: string
      space_id:
        type: string
    type: object
  controller.reqToUpdateServiceInfo:
    properties:
      app_url:
        type: string
      commit_id:
        type: string
      log_url:
        type: string
      space_id:
        type: string
    type: object
  controller.reqToUserOrgOperate:
    properties:
      org_name:
        type: string
      user_name:
        type: string
    type: object
  controller.tokenVerifyRequest:
    properties:
      action:
        type: string
      token:
        type: string
    required:
    - action
    - token
    type: object
  session.RequestToCheckAndRefresh:
    properties:
      csrf_token:
        type: string
      ip:
        type: string
      session_id:
        type: string
      user_agent:
        type: string
    type: object
  session.RequestToClear:
    properties:
      session_id:
        type: string
    type: object
  session.ResponseToCheckAndRefresh:
    properties:
      csrf_token:
        type: string
      user:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/activity:
    delete:
      consumes:
      - application/json
      description: delete all the record of an resource in the DB
      parameters:
      - description: body of delete activity app
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/activityapp.ReqToDeleteActivity'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data: {}
                msg:
                  type: string
              type: object
      security:
      - Internal: []
      summary: DeleteActivity
      tags:
      - ActivityInternal
    post:
      consumes:
      - application/json
      description: add activities to DB
      parameters:
      - description: body of create activity app
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/activityapp.ReqToCreateActivity'
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data: {}
                msg:
                  type: string
              type: object
      security:
      - Internal: []
      summary: AddActivity
      tags:
      - ActivityInternal
  /v1/coderepo/permission/read:
    post:
      consumes:
      - application/json
      description: check if can read repo's sub-resource not the repo itsself
      parameters:
      - description: body of request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToCheckPermission'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: Read
      tags:
      - Permission
  /v1/coderepo/permission/update:
    post:
      consumes:
      - application/json
      description: check if can create/update/delete repo's sub-resource not the repo
        itsself
      parameters:
      - description: body of request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToCheckPermission'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: Update
      tags:
      - Permission
  /v1/computility/account:
    post:
      consumes:
      - application/json
      description: user joined computility org
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUserOrgOperate'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: ComputilityUserJoin
      tags:
      - ComputilityInternal
  /v1/computility/account/remove:
    put:
      consumes:
      - application/json
      description: user removed from computility org
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUserOrgOperate'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: ComputilityUserRemove
      tags:
      - ComputilityInternal
  /v1/computility/org/delete:
    delete:
      consumes:
      - application/json
      description: delete computility org
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToOrgDelete'
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: ComputilityOrgDelete
      tags:
      - ComputilityInternal
  /v1/model/{id}:
    get:
      consumes:
      - application/json
      description: get model info by id
      parameters:
      - description: id of model
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: GetById
      tags:
      - ModelInternal
  /v1/model/{id}/label:
    put:
      consumes:
      - application/json
      description: reset label of model
      parameters:
      - description: id of model
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToResetLabel'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: ResetLabel
      tags:
      - ModelInternal
  /v1/session/check:
    put:
      consumes:
      - application/json
      description: check and refresh session
      parameters:
      - description: body of new member
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/session.RequestToCheckAndRefresh'
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/session.ResponseToCheckAndRefresh'
                msg:
                  type: string
              type: object
      security:
      - Internal: []
      summary: CheckAndRefresh
      tags:
      - SessionInternal
  /v1/session/clear:
    delete:
      consumes:
      - application/json
      description: Clear session when it expired
      parameters:
      - description: body of new member
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/session.RequestToClear'
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: Clear session by session id
      tags:
      - SessionInternal
  /v1/space-app/:
    post:
      consumes:
      - application/json
      description: create space app
      parameters:
      - description: body of creating space app
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToCreateSpaceApp'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: Create
      tags:
      - SpaceApp
  /v1/space-app/build/done:
    put:
      consumes:
      - application/json
      description: notify space app build is done
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToSetBuildIsDone'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: NotifyBuildIsDone
      tags:
      - SpaceApp
  /v1/space-app/build/started:
    put:
      consumes:
      - application/json
      description: notify space app building is started
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUpdateBuildInfo'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: NotifyBuildIsStarted
      tags:
      - SpaceApp
  /v1/space-app/service/started:
    put:
      consumes:
      - application/json
      description: notify space app service is started
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUpdateServiceInfo'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: NotifyServiceIsStarted
      tags:
      - SpaceApp
  /v1/space-app/status:
    put:
      consumes:
      - application/json
      description: notify space app status
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToSetStatus'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: NotifyUpdateStatus
      tags:
      - SpaceApp
  /v1/space/{id}:
    get:
      consumes:
      - application/json
      description: get space
      parameters:
      - description: id of space
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: Get
      tags:
      - SpaceInternal
  /v1/space/{id}/local_cmd:
    put:
      consumes:
      - application/json
      description: update space local cmd
      parameters:
      - description: id of space
        in: path
        name: id
        required: true
        type: string
      - description: local cmd to reproduce the space
        in: body
        name: body
        required: true
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: UpdateSpaceLocalCmd
      tags:
      - SpaceInternal
  /v1/space/{id}/local_env_info:
    put:
      consumes:
      - application/json
      description: update space local env info
      parameters:
      - description: id of space
        in: path
        name: id
        required: true
        type: string
      - description: local env info to update local space env info
        in: body
        name: body
        required: true
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: UpdateSpaceLocalEnvInfo
      tags:
      - SpaceInternal
  /v1/space/{id}/model:
    put:
      consumes:
      - application/json
      description: update space models relations
      parameters:
      - description: id of space
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.ModeIds'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: UpdateSpaceModels
      tags:
      - SpaceInternal
  /v1/user/{name}/platform:
    get:
      consumes:
      - application/json
      description: Get platform user info
      parameters:
      - description: name of the user
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: GetPlatformUser info
      tags:
      - UserInternal
  /v1/user/token/verify:
    post:
      consumes:
      - application/json
      description: verify a platform token of user
      parameters:
      - description: body of token
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.tokenVerifyRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
        "400":
          description: Bad Request
          schema:
            type: token
        "401":
          description: Unauthorized
          schema:
            type: token
        "403":
          description: Forbidden
          schema:
            type: token
        "500":
          description: Internal Server Error
          schema:
            type: internal
      security:
      - Internal: []
      summary: Verify token
      tags:
      - UserInternal
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and api Bearer.
    in: header
    name: Authorization
    type: apiKey
  Internal:
    description: Type "Internal" followed by a space and internal token.
    in: header
    name: TOKEN
    type: apiKey
swagger: "2.0"
