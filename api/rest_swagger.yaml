definitions:
  app.ApproveDTO:
    properties:
      by:
        type: string
      created_at:
        type: integer
      expires_at:
        type: integer
      fullname:
        type: string
      id:
        type: string
      inviter:
        type: string
      msg:
        type: string
      org_full_name:
        type: string
      org_id:
        type: string
      org_name:
        type: string
      role:
        type: string
      status:
        type: string
      updated_at:
        type: integer
      user_id:
        type: string
      user_name:
        type: string
    type: object
  app.BranchCreateDTO:
    properties:
      branch_name:
        type: string
    type: object
  app.MemberDTO:
    properties:
      created_at:
        type: integer
      full_name:
        type: string
      id:
        type: string
      org_fullname:
        type: string
      org_id:
        type: string
      org_name:
        type: string
      role:
        type: string
      updated_at:
        type: integer
      user_id:
        type: string
      user_name:
        type: string
    type: object
  app.MemberRequestDTO:
    properties:
      by:
        type: string
      created_at:
        type: integer
      fullname:
        type: string
      id:
        type: string
      msg:
        type: string
      org_id:
        type: string
      org_name:
        type: string
      role:
        type: string
      status:
        type: string
      updated_at:
        type: integer
      user_id:
        type: string
      username:
        type: string
    type: object
  app.ModelDTO:
    properties:
      created_at:
        type: integer
      desc:
        type: string
      disable:
        type: boolean
      disable_reason:
        type: string
      download_count:
        type: integer
      fullname:
        type: string
      id:
        type: string
      labels:
        $ref: '#/definitions/app.ModelLabelsDTO'
      like_count:
        type: integer
      name:
        type: string
      owner:
        type: string
      updated_at:
        type: integer
      usage:
        type: string
      visibility:
        type: string
    type: object
  app.ModelLabelsDTO:
    properties:
      frameworks:
        items:
          type: string
        type: array
      library_name:
        type: string
      license:
        type: string
      others:
        items:
          type: string
        type: array
      task:
        type: string
    type: object
  app.ModelsDTO:
    properties:
      models:
        items:
          $ref: '#/definitions/repository.ModelSummary'
        type: array
      total:
        type: integer
    type: object
  app.OrgCertificateDTO:
    properties:
      certificate_org_name:
        type: string
      certificate_org_type:
        type: string
      phone:
        type: string
      reason:
        type: string
      status:
        type: string
      unified_social_credit_code:
        type: string
    type: object
  app.ResourceDTO:
    properties:
      disable:
        type: boolean
      index:
        type: integer
      owner:
        type: string
      type:
        type: string
    type: object
  app.SpaceLabelsDTO:
    properties:
      framework:
        type: string
      license:
        type: string
      task:
        type: string
    type: object
  app.SpacesDTO:
    properties:
      spaces:
        items:
          $ref: '#/definitions/repository.SpaceSummary'
        type: array
      total:
        type: integer
    type: object
  app.TokenDTO:
    properties:
      account:
        type: string
      created_at:
        type: integer
      expired:
        type: integer
      id:
        type: string
      name:
        type: string
      owner_id:
        type: string
      permission:
        type: string
      token:
        type: string
      updated_at:
        type: integer
    type: object
  controller.OrgAcceptMemberRequest:
    properties:
      msg:
        type: string
      org_name:
        type: string
    required:
    - org_name
    type: object
  controller.OrgApproveMemberRequest:
    properties:
      msg:
        type: string
      org_name:
        type: string
      user:
        type: string
    required:
    - org_name
    type: object
  controller.OrgInviteMemberRequest:
    properties:
      msg:
        type: string
      org_name:
        type: string
      role:
        type: string
      user:
        type: string
    required:
    - org_name
    - role
    - user
    type: object
  controller.OrgMemberEditRequest:
    properties:
      role:
        type: string
      user:
        type: string
    required:
    - role
    - user
    type: object
  controller.OrgReqMemberRequest:
    properties:
      msg:
        type: string
      org_name:
        type: string
    required:
    - org_name
    type: object
  controller.OrgRevokeInviteRequest:
    properties:
      msg:
        type: string
      org_name:
        type: string
      user:
        type: string
    required:
    - org_name
    type: object
  controller.OrgRevokeMemberReqRequest:
    properties:
      msg:
        type: string
      org_name:
        type: string
      user:
        type: string
    required:
    - org_name
    type: object
  controller.ResponseData:
    properties:
      code:
        type: string
      data: {}
      msg:
        type: string
    type: object
  controller.activitiesInfo:
    properties:
      activities:
        items:
          $ref: '#/definitions/controller.activityInfo'
        type: array
      total:
        type: integer
    type: object
  controller.activityInfo:
    properties:
      avatar_id:
        type: string
      download_count:
        type: integer
      fullname:
        type: string
      like_count:
        type: integer
      model_labels:
        $ref: '#/definitions/app.ModelLabelsDTO'
      name:
        type: string
      owner:
        type: string
      owner_type:
        type: integer
      resource:
        $ref: '#/definitions/app.ResourceDTO'
      space_avatar_id:
        type: string
      time:
        type: integer
      type:
        type: string
    type: object
  controller.bindEmailRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
  controller.orgBasicInfoUpdateRequest:
    properties:
      allow_request:
        type: boolean
      avatar_id:
        type: string
      default_role:
        type: string
      description:
        type: string
      fullname:
        type: string
      website:
        type: string
    type: object
  controller.orgCertificateRequest:
    properties:
      certificate_org_name:
        type: string
      certificate_org_type:
        type: string
      identity:
        type: string
      image_of_certificate:
        type: string
      phone:
        type: string
      unified_social_credit_code:
        type: string
    required:
    - certificate_org_name
    - certificate_org_type
    - identity
    - image_of_certificate
    - phone
    - unified_social_credit_code
    type: object
  controller.orgCreateRequest:
    properties:
      avatar_id:
        type: string
      description:
        type: string
      fullname:
        type: string
      name:
        type: string
      website:
        type: string
    required:
    - name
    type: object
  controller.orgMemberRemoveRequest:
    properties:
      user:
        type: string
    required:
    - user
    type: object
  controller.reqToCreateModel:
    properties:
      desc:
        type: string
      fullname:
        type: string
      license:
        type: string
      name:
        type: string
      owner:
        type: string
      visibility:
        type: string
    type: object
  controller.reqToCreateSpace:
    properties:
      avatar_id:
        type: string
      base_image:
        type: string
      desc:
        type: string
      fullname:
        type: string
      hardware:
        type: string
      license:
        type: string
      name:
        type: string
      owner:
        type: string
      sdk:
        type: string
      visibility:
        type: string
    type: object
  controller.reqToCreateSpaceSecret:
    properties:
      desc:
        type: string
      name:
        type: string
      value:
        type: string
    type: object
  controller.reqToCreateSpaceVariable:
    properties:
      desc:
        type: string
      name:
        type: string
      value:
        type: string
    type: object
  controller.reqToDisableSpace:
    properties:
      reason:
        type: string
    type: object
  controller.reqToUpdateModel:
    properties:
      desc:
        type: string
      fullname:
        type: string
      visibility:
        type: string
    type: object
  controller.reqToUpdateSpace:
    properties:
      avatar_id:
        type: string
      desc:
        type: string
      fullname:
        type: string
      hardware:
        type: string
      sdk:
        type: string
      visibility:
        type: string
    type: object
  controller.reqToUpdateSpaceSecret:
    properties:
      desc:
        type: string
      value:
        type: string
    type: object
  controller.reqToUpdateSpaceVariable:
    properties:
      desc:
        type: string
      value:
        type: string
    type: object
  controller.restfulReqToCreateBranch:
    properties:
      base_branch:
        type: string
      branch:
        type: string
    type: object
  controller.revokePrivacyInfo:
    properties:
      id_token:
        type: string
    type: object
  controller.sendEmailRequest:
    properties:
      capt:
        type: string
      email:
        type: string
    required:
    - capt
    - email
    type: object
  controller.spaceDetail:
    properties:
      avatar_id:
        type: string
      base_image:
        type: string
      comp_power_allocated:
        type: boolean
      created_at:
        type: integer
      desc:
        type: string
      disable:
        type: boolean
      disable_reason:
        type: string
      download_count:
        type: integer
      exception:
        type: string
      fullname:
        type: string
      hardware:
        type: string
      id:
        type: string
      is_npu:
        type: boolean
      labels:
        $ref: '#/definitions/app.SpaceLabelsDTO'
      like_count:
        type: integer
      liked:
        type: boolean
      local_cmd:
        type: string
      local_env_info:
        type: string
      name:
        type: string
      owner:
        type: string
      owner_type:
        type: integer
      sdk:
        type: string
      space_avatar_id:
        type: string
      updated_at:
        type: integer
      visibility:
        type: string
    type: object
  controller.tokenCreateRequest:
    properties:
      name:
        type: string
      perm:
        type: string
    required:
    - name
    - perm
    type: object
  controller.userBasicInfoUpdateRequest:
    properties:
      avatar_id:
        type: string
      description:
        type: string
      fullname:
        type: string
      revoke_delete:
        type: boolean
    type: object
  domain.SpaceLabels:
    properties:
      framework:
        description: framework
        type: string
      license:
        description: license label
      task:
        description: task label
    type: object
  github_com_openmerlin_merlin-server_user_app.UserDTO:
    properties:
      account:
        type: string
      allow_request:
        type: boolean
      avatar_id:
        type: string
      created_at:
        type: integer
      default_role:
        type: string
      description:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: string
      owner:
        type: string
      owner_id:
        type: string
      phone:
        type: string
      request_delete:
        type: boolean
      request_delete_at:
        type: integer
      type:
        type: integer
      updated_at:
        type: integer
      website:
        type: string
    type: object
  github_com_openmerlin_merlin-server_user_app.UserInfoDTO:
    properties:
      account:
        type: string
      allow_request:
        type: boolean
      avatar_id:
        type: string
      created_at:
        type: integer
      default_role:
        type: string
      description:
        type: string
      email:
        type: string
      fullname:
        type: string
      id:
        type: string
      is_disable_admin:
        type: boolean
      owner:
        type: string
      owner_id:
        type: string
      phone:
        type: string
      request_delete:
        type: boolean
      request_delete_at:
        type: integer
      type:
        type: integer
      updated_at:
        type: integer
      website:
        type: string
    type: object
  repository.ModelSummary:
    properties:
      desc:
        type: string
      disable:
        type: boolean
      disable_reason:
        type: string
      download_count:
        type: integer
      frameworks:
        items:
          type: string
        type: array
      fullname:
        type: string
      id:
        type: string
      license:
        type: string
      like_count:
        type: integer
      name:
        type: string
      owner:
        type: string
      task:
        type: string
      updated_at:
        type: integer
    type: object
  repository.SpaceSummary:
    properties:
      base_image:
        type: string
      desc:
        type: string
      disable:
        type: boolean
      disable_reason:
        type: string
      download_count:
        type: integer
      fullname:
        type: string
      id:
        type: string
      labels:
        $ref: '#/definitions/domain.SpaceLabels'
      like_count:
        type: integer
      name:
        type: string
      owner:
        type: string
      space_avatar_id:
        type: string
      updated_at:
        type: integer
    type: object
info:
  contact: {}
paths:
  /v1/account/{name}:
    get:
      consumes:
      - application/json
      description: get organization or user info
      parameters:
      - description: name of the user of organization
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO'
                msg:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data: {}
                msg:
                  type: string
              type: object
        "404":
          description: user not found
      summary: User or organization info
      tags:
      - Organization
  /v1/branch/{type}/{owner}/{repo}:
    post:
      consumes:
      - application/json
      description: create repo branch
      parameters:
      - description: type of space/model
        enum:
        - space
        - model
        in: path
        name: type
        required: true
        type: string
      - description: owner of space/model
        in: path
        maxLength: 40
        name: owner
        required: true
        type: string
      - description: name of space/model
        in: path
        maxLength: 100
        name: repo
        required: true
        type: string
      - description: restfulReqToCreateBranch
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.restfulReqToCreateBranch'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/app.BranchCreateDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: CreateBranch
      tags:
      - BranchRestful
  /v1/branch/{type}/{owner}/{repo}/{branch}:
    delete:
      consumes:
      - application/json
      description: delete repo branch
      parameters:
      - description: repo type
        enum:
        - space
        - model
        in: path
        name: type
        required: true
        type: string
      - description: repo owner
        in: path
        maxLength: 40
        name: owner
        required: true
        type: string
      - description: repo name
        in: path
        maxLength: 100
        name: repo
        required: true
        type: string
      - description: branch name
        in: path
        maxLength: 100
        name: branch
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: DeleteBranch
      tags:
      - BranchRestful
  /v1/invite:
    delete:
      consumes:
      - application/json
      description: Revoke invitation of the organization
      parameters:
      - description: body of the invitation
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.OrgRevokeInviteRequest'
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: RevokeInvitation
      tags:
      - Organization
    get:
      consumes:
      - application/json
      description: List invitation of the organization
      parameters:
      - description: organization name
        in: query
        maxLength: 40
        name: org_name
        type: string
      - description: invitee name
        in: query
        maxLength: 40
        name: invitee
        type: string
      - description: inviter name
        in: query
        maxLength: 40
        name: inviter
        type: string
      - description: 'invitation status, can be: pending/approved/rejected'
        enum:
        - pending
        - approved
        - rejected
        in: query
        name: status
        type: string
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: page index
        in: query
        name: page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  items:
                    $ref: '#/definitions/app.ApproveDTO'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: ListInvitation
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: Send invitation to a user to join the organization
      parameters:
      - description: body of the invitation
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.OrgInviteMemberRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/app.ApproveDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: InviteMember
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: Accept invite of the organization
      parameters:
      - description: body of the invitation
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.OrgAcceptMemberRequest'
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/app.ApproveDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: AcceptInvite
      tags:
      - Organization
  /v1/model:
    get:
      consumes:
      - application/json
      description: list global public model
      parameters:
      - description: name of model
        in: query
        maxLength: 100
        name: name
        type: string
      - description: task label
        in: query
        maxLength: 100
        name: task
        type: string
      - description: owner of model
        in: query
        maxLength: 40
        name: owner
        required: true
        type: string
      - description: other labels, separate multiple each ones with commas
        in: query
        maxLength: 100
        name: others
        type: string
      - description: license label
        in: query
        maxLength: 40
        name: license
        type: string
      - description: framework labels, separate multiple each ones with commas
        in: query
        maxLength: 100
        name: frameworks
        type: string
      - description: whether to calculate the total
        enum:
        - true
        - false
        in: query
        name: count
        type: boolean
      - description: 'sort types: most_likes, alphabetical, most_downloads, recently_updated,
          recently_created'
        enum:
        - most_likes
        - alphabetical
        - most_downloads
        - recently_updated
        - recently_created
        in: query
        name: sort_by
        type: string
      - description: page num which starts from 1
        in: query
        name: page_num
        type: integer
      - description: count per page
        in: query
        name: count_per_page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/app.ModelsDTO'
                msg:
                  type: string
              type: object
      summary: List
      tags:
      - ModelRestful
    post:
      consumes:
      - application/json
      description: create model
      parameters:
      - description: body of creating model
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToCreateModel'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: string
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Create
      tags:
      - Model
  /v1/model/{id}:
    delete:
      consumes:
      - application/json
      description: delete model
      parameters:
      - description: id of model
        in: path
        maxLength: 20
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: Delete
      tags:
      - Model
    put:
      consumes:
      - application/json
      description: update model
      parameters:
      - description: id of model
        in: path
        maxLength: 20
        name: id
        required: true
        type: string
      - description: body of updating model
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUpdateModel'
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Update
      tags:
      - Model
  /v1/model/{owner}/{name}:
    get:
      consumes:
      - application/json
      description: get model
      parameters:
      - description: owner of model
        in: path
        maxLength: 40
        name: owner
        required: true
        type: string
      - description: name of model
        in: path
        maxLength: 100
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/app.ModelDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Get
      tags:
      - ModelRestful
  /v1/name:
    head:
      consumes:
      - application/json
      description: Check the name is available
      parameters:
      - description: the name to be check whether it's usable
        in: query
        maxLength: 40
        name: name
        required: true
        type: string
      responses:
        "200":
          description: name is valid
        "409":
          description: name is invalid
      security:
      - Bearer: []
      summary: Check
      tags:
      - Organization
  /v1/organization:
    get:
      consumes:
      - application/json
      description: get organization info
      parameters:
      - description: filter by owner
        in: query
        maxLength: 40
        name: owner
        type: string
      - description: filter by username
        in: query
        maxLength: 40
        name: username
        type: string
      - collectionFormat: csv
        description: filter by roles
        in: query
        items:
          enum:
          - read
          - write
          - admin
          type: string
        name: roles
        type: array
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  items:
                    $ref: '#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO'
                  type: array
                msg:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data: {}
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: List
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: create a new organization
      parameters:
      - description: body of new organization
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.orgCreateRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Create
      tags:
      - Organization
  /v1/organization/{name}:
    delete:
      consumes:
      - application/json
      description: delete a organization
      parameters:
      - description: name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: Delete
      tags:
      - Organization
    get:
      consumes:
      - application/json
      description: get organization info
      parameters:
      - description: name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO'
                msg:
                  type: string
              type: object
      summary: Get
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: leave the organization
      parameters:
      - description: name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: Leave
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: update org basic info
      parameters:
      - description: name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      - description: body of new organization
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.orgBasicInfoUpdateRequest'
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Update
      tags:
      - Organization
  /v1/organization/{name}/certificate:
    get:
      consumes:
      - application/json
      description: get organization certification
      parameters:
      - description: name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/app.OrgCertificateDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Certification
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: organization certification
      parameters:
      - description: organization name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      - description: body of certificate
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.orgCertificateRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Certification
      tags:
      - Organization
  /v1/organization/{name}/certificate/check:
    get:
      consumes:
      - application/json
      description: check organization certification
      parameters:
      - description: name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      - description: certificate organization name
        in: query
        maxLength: 100
        name: certificate_org_name
        type: string
      - description: the unified social credit code
        in: query
        maxLength: 100
        name: unified_social_credit_code
        type: string
      - description: phone number
        in: query
        maxLength: 16
        name: phone
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: boolean
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Certification
      tags:
      - Organization
  /v1/organization/{name}/member:
    delete:
      consumes:
      - application/json
      description: Remove a member from a organization
      parameters:
      - description: body of the removed member
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.orgMemberRemoveRequest'
      - description: name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: RemoveMember
      tags:
      - Organization
    get:
      consumes:
      - application/json
      description: list organization members
      parameters:
      - description: name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      - description: filter by username
        in: query
        maxLength: 40
        name: username
        type: string
      - description: filter by role
        enum:
        - read
        - write
        - admin
        in: query
        name: role
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  items:
                    $ref: '#/definitions/app.MemberDTO'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: ListMember
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: Edit a member to the organization's role
      parameters:
      - description: body of new member
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.OrgMemberEditRequest'
      - description: name
        in: path
        maxLength: 40
        name: name
        required: true
        type: string
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: EditMember
      tags:
      - Organization
  /v1/request:
    delete:
      consumes:
      - application/json
      description: Revoke member request of the organization
      parameters:
      - description: body of the member request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.OrgRevokeMemberReqRequest'
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: RevokeMember
      tags:
      - Organization
    get:
      consumes:
      - application/json
      description: List requests of the organization
      parameters:
      - description: organization name
        in: query
        maxLength: 40
        name: org_name
        type: string
      - description: invitee name
        in: query
        maxLength: 40
        name: requester
        type: string
      - description: 'invitation status, can be: pending/approved/rejected'
        enum:
        - pending
        - approved
        - rejected
        in: query
        name: status
        type: string
      - description: page size
        in: query
        name: page_size
        type: integer
      - description: page index
        in: query
        name: page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  items:
                    $ref: '#/definitions/app.MemberRequestDTO'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: ListRequests
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: Request to be a member of the organization
      parameters:
      - description: body of the member request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.OrgReqMemberRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/app.MemberRequestDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: RequestMember
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: Approve a user's member request of the organization
      parameters:
      - description: body of the accept
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.OrgApproveMemberRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: ApproveRequest
      tags:
      - Organization
  /v1/space:
    get:
      consumes:
      - application/json
      description: list global public space
      parameters:
      - description: name of space
        in: query
        maxLength: 100
        name: name
        type: string
      - description: task label
        in: query
        maxLength: 100
        name: task
        type: string
      - description: owner of space
        in: query
        maxLength: 40
        name: owner
        required: true
        type: string
      - description: license label
        in: query
        maxLength: 40
        name: license
        type: string
      - description: 'framework '
        enum:
        - pytorch
        - mindspore
        in: query
        name: framework
        type: string
      - description: whether to calculate the total
        enum:
        - true
        - false
        in: query
        name: count
        type: boolean
      - description: 'sort types: most_likes, alphabetical, most_downloads, recently_updated,
          recently_created'
        enum:
        - most_likes
        - alphabetical
        - most_downloads
        - recently_updated
        - recently_created
        in: query
        name: sort_by
        type: string
      - description: page num which starts from 1
        in: query
        name: page_num
        type: integer
      - description: count per page
        in: query
        name: count_per_page
        type: integer
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/app.SpacesDTO'
                msg:
                  type: string
              type: object
      summary: List
      tags:
      - SpaceRestful
    post:
      consumes:
      - application/json
      description: create space
      parameters:
      - description: body of creating space
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToCreateSpace'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: string
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Create
      tags:
      - Space
  /v1/space-app/{owner}/{name}/pause:
    post:
      consumes:
      - application/json
      description: stop space app
      parameters:
      - description: owner of space
        in: path
        name: owner
        required: true
        type: string
      - description: name of space
        in: path
        name: name
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Bearer: []
      summary: Post
      tags:
      - Space
  /v1/space-app/{owner}/{name}/restart:
    post:
      consumes:
      - application/json
      description: restart space app
      parameters:
      - description: owner of space
        in: path
        maxLength: 40
        name: owner
        required: true
        type: string
      - description: name of space
        in: path
        maxLength: 100
        name: name
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Bearer: []
      summary: Post
      tags:
      - Space
      x-example:
        data: successfully
  /v1/space-app/{owner}/{name}/resume:
    post:
      consumes:
      - application/json
      description: resume space app
      parameters:
      - description: owner of space
        in: path
        name: owner
        required: true
        type: string
      - description: name of space
        in: path
        name: name
        required: true
        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Bearer: []
      summary: Post
      tags:
      - Space
  /v1/space/{id}:
    delete:
      consumes:
      - application/json
      description: delete space
      parameters:
      - description: id of space
        in: path
        maxLength: 20
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: Delete
      tags:
      - Space
    put:
      consumes:
      - application/json
      description: update space
      parameters:
      - description: id of space
        in: path
        maxLength: 20
        name: id
        required: true
        type: string
      - description: body of updating space
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUpdateSpace'
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Update
      tags:
      - Space
  /v1/space/{id}/disable:
    put:
      consumes:
      - application/json
      description: disable space
      parameters:
      - description: id of space
        in: path
        maxLength: 20
        name: id
        required: true
        type: string
      - description: body of disable space
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToDisableSpace'
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Disable space
      tags:
      - Space
  /v1/space/{id}/secret/{sid}:
    delete:
      consumes:
      - application/json
      description: delete space secret
      parameters:
      - description: id of space
        in: path
        maxLength: 20
        name: id
        required: true
        type: string
      - description: id of secret
        in: path
        maxLength: 20
        name: sid
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: DeleteSecret
      tags:
      - Space
  /v1/space/{id}/secret/{vid}:
    put:
      consumes:
      - application/json
      description: update space secret
      parameters:
      - description: id of space
        in: path
        maxLength: 20
        name: id
        required: true
        type: string
      - description: id of secret
        in: path
        maxLength: 20
        name: sid
        required: true
        type: string
      - description: body of updating space secret
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUpdateSpaceSecret'
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: UpdateSecret
      tags:
      - Space
  /v1/space/{id}/variable:
    post:
      consumes:
      - application/json
      description: create space variable
      parameters:
      - description: body of creating space variable
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToCreateSpaceVariable'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: string
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: CreateVariable
      tags:
      - Space
  /v1/space/{id}/variable/{vid}:
    delete:
      consumes:
      - application/json
      description: delete space variable
      parameters:
      - description: id of space
        in: path
        maxLength: 20
        name: id
        required: true
        type: string
      - description: id of variable
        in: path
        maxLength: 20
        name: vid
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: DeleteVariable
      tags:
      - Space
    put:
      consumes:
      - application/json
      description: update space variable
      parameters:
      - description: id of space
        in: path
        maxLength: 20
        name: id
        required: true
        type: string
      - description: id of variable
        in: path
        maxLength: 20
        name: vid
        required: true
        type: string
      - description: body of updating space variable
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUpdateSpaceVariable'
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: UpdateVariable
      tags:
      - Space
  /v1/space/{owner}/{name}:
    get:
      consumes:
      - application/json
      description: get space
      parameters:
      - description: owner of space
        in: path
        maxLength: 40
        name: owner
        required: true
        type: string
      - description: name of space
        in: path
        maxLength: 100
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/controller.spaceDetail'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Get
      tags:
      - SpaceRestful
  /v1/space{id}/secret:
    post:
      consumes:
      - application/json
      description: create space secret
      parameters:
      - description: body of creating space secret
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToCreateSpaceSecret'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: string
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: CreateSecret
      tags:
      - Space
  /v1/user:
    delete:
      consumes:
      - application/json
      description: delete
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: RequestDelete User info
      tags:
      - User
    get:
      consumes:
      - application/json
      description: get current sign-in user info
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/github_com_openmerlin_merlin-server_user_app.UserInfoDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Get current user info
      tags:
      - User
    put:
      consumes:
      - application/json
      description: update user basic info
      parameters:
      - description: body of updating user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.userBasicInfoUpdateRequest'
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Update
      tags:
      - User
  /v1/user/activity:
    get:
      consumes:
      - application/json
      description: get activities
      parameters:
      - description: filter by space
        in: query
        maxLength: 100
        name: space
        type: string
      - description: filter by model
        in: query
        maxLength: 100
        name: model
        type: string
      - description: filter by like
        in: query
        maxLength: 100
        name: like
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/controller.activitiesInfo'
                msg:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data: {}
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: List
      tags:
      - ActivityRestful
  /v1/user/email/bind:
    post:
      consumes:
      - application/json
      description: bind user's email
      parameters:
      - description: body of bind email info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.bindEmailRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Bind User Email
      tags:
      - User
  /v1/user/email/send:
    post:
      consumes:
      - application/json
      description: send user's email verify code
      parameters:
      - description: body of bind email info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.sendEmailRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  type: object
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: Send User Email Verify code
      tags:
      - User
  /v1/user/privacy:
    put:
      consumes:
      - application/json
      description: revoke
      responses:
        "202":
          description: Accepted
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/controller.revokePrivacyInfo'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: PrivacyRevoke
      tags:
      - User
  /v1/user/privilege:
    get:
      description: List User's privilege organization info
      parameters:
      - description: 'privilege type, can be: npu/disable'
        enum:
        - npu
        - disable
        in: query
        name: type
        required: true
        type: string
      - description: user name to filter the organizations which contain the user
        in: query
        name: user
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  items:
                    $ref: '#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: List User's privilege organization info
      tags:
      - Organization
  /v1/user/token:
    get:
      consumes:
      - application/json
      description: list all platform tokens of user
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  items:
                    $ref: '#/definitions/app.TokenDTO'
                  type: array
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: GetTokenInfo
      tags:
      - User
    post:
      consumes:
      - application/json
      description: create a new platform token of user
      parameters:
      - description: body of create token
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.tokenCreateRequest'
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controller.ResponseData'
            - properties:
                code:
                  type: string
                data:
                  $ref: '#/definitions/app.TokenDTO'
                msg:
                  type: string
              type: object
      security:
      - Bearer: []
      summary: CreatePlatformToken
      tags:
      - User
  /v1/user/token/{name}:
    delete:
      consumes:
      - application/json
      description: delete a new platform token of user
      parameters:
      - description: token name
        in: path
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: DeletePlatformToken
      tags:
      - User
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and api Bearer.
    in: header
    name: Authorization
    type: apiKey
  Internal:
    description: Type "Internal" followed by a space and internal token.
    in: header
    name: TOKEN
    type: apiKey
swagger: "2.0"
