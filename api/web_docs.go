// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplateweb = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/account/{name}": {
            "get": {
                "description": "get organization or user info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "User or organization info",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name of the user of organization",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {},
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/v1/analytics/key": {
            "get": {
                "description": "get analyse key",
                "tags": [
                    "Other"
                ],
                "summary": "Ayalyse key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.tokenResponse"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/computility/account/{type}": {
            "get": {
                "description": "get user computility account detail",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ComputilityWeb"
                ],
                "summary": "GetComputilityAccountDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "computility type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.AccountQuotaDetailDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {},
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/exists/:owner/:name": {
            "get": {
                "description": "check whether the repo exists",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "CodeRepo"
                ],
                "summary": "Get coderepo and check it",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of repo",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of repo",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "boolean"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/invite": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List invitation of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "ListInvitation",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "organization name",
                        "name": "org_name",
                        "in": "query"
                    },
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "invitee name",
                        "name": "invitee",
                        "in": "query"
                    },
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "inviter name",
                        "name": "inviter",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ],
                        "type": "string",
                        "description": "invitation status, can be: pending/approved/rejected",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page index",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/app.ApproveDTO"
                                            }
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Accept invite of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "AcceptInvite",
                "parameters": [
                    {
                        "description": "body of the invitation",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgAcceptMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.ApproveDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Send invitation to a user to join the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "InviteMember",
                "parameters": [
                    {
                        "description": "body of the invitation",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgInviteMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.ApproveDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Revoke invitation of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "RevokeInvitation",
                "parameters": [
                    {
                        "description": "body of the invitation",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgRevokeInviteRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/model": {
            "get": {
                "description": "list global public model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelWeb"
                ],
                "summary": "ListGlobal",
                "parameters": [
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "task label",
                        "name": "task",
                        "in": "query"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "other labels, separate multiple each ones with commas",
                        "name": "others",
                        "in": "query"
                    },
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "license label",
                        "name": "license",
                        "in": "query"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "framework labels, separate multiple each ones with commas",
                        "name": "frameworks",
                        "in": "query"
                    },
                    {
                        "enum": [
                            true,
                            false
                        ],
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "most_likes",
                            "alphabetical",
                            "most_downloads",
                            "recently_updated",
                            "recently_created"
                        ],
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.modelsInfo"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of creating model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToCreateModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/model/recommend": {
            "get": {
                "description": "list recommend models",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelWeb"
                ],
                "summary": "ListRecommends",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.modelsRecommendInfo"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/model/relation/{id}/space": {
            "get": {
                "description": "get spaces related to a model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelWeb"
                ],
                "summary": "GetSpacesByModelId",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/app.SpaceModelDTO"
                                            }
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/model/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToUpdateModel"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/model/{id}/disable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "disable the model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelWeb"
                ],
                "summary": "disable model",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of disable model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToDisableModel"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/model/{owner}": {
            "get": {
                "description": "list model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelWeb"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            true,
                            false
                        ],
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "most_likes",
                            "alphabetical",
                            "most_downloads",
                            "recently_updated",
                            "recently_created"
                        ],
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.userModelsInfo"
                        }
                    }
                }
            }
        },
        "/v1/model/{owner}/{name}": {
            "get": {
                "description": "get model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelWeb"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.modelDetail"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/name": {
            "head": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Check the name is available",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Check",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "the name to be check whether it's usable",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "name is valid"
                    },
                    "409": {
                        "description": "name is invalid"
                    }
                }
            }
        },
        "/v1/organization": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get organization info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "filter by owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "read",
                                "write",
                                "admin"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "filter by roles",
                        "name": "roles",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO"
                                            }
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {},
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create a new organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of new organization",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.orgCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/organization/{name}": {
            "get": {
                "description": "get organization info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update org basic info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of new organization",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.orgBasicInfoUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "leave the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Leave",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete a organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/organization/{name}/certificate": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get organization certification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Certification",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.OrgCertificateDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "organization certification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Certification",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "organization name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of certificate",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.orgCertificateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/organization/{name}/certificate/check": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "check organization certification",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Certification",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "certificate organization name",
                        "name": "certificate_org_name",
                        "in": "query"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "the unified social credit code",
                        "name": "unified_social_credit_code",
                        "in": "query"
                    },
                    {
                        "maxLength": 16,
                        "type": "string",
                        "description": "phone number",
                        "name": "phone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "boolean"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/organization/{name}/member": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list organization members",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "ListMember",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "read",
                            "write",
                            "admin"
                        ],
                        "type": "string",
                        "description": "filter by role",
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/app.MemberDTO"
                                            }
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Edit a member to the organization's role",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "EditMember",
                "parameters": [
                    {
                        "description": "body of new member",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgMemberEditRequest"
                        }
                    },
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Remove a member from a organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "RemoveMember",
                "parameters": [
                    {
                        "description": "body of the removed member",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.orgMemberRemoveRequest"
                        }
                    },
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/request": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List requests of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "ListRequests",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "organization name",
                        "name": "org_name",
                        "in": "query"
                    },
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "invitee name",
                        "name": "requester",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ],
                        "type": "string",
                        "description": "invitation status, can be: pending/approved/rejected",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page index",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/app.MemberRequestDTO"
                                            }
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Approve a user's member request of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "ApproveRequest",
                "parameters": [
                    {
                        "description": "body of the accept",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgApproveMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Request to be a member of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "RequestMember",
                "parameters": [
                    {
                        "description": "body of the member request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgReqMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.MemberRequestDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Revoke member request of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "RevokeMember",
                "parameters": [
                    {
                        "description": "body of the member request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgRevokeMemberReqRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/search": {
            "get": {
                "description": "get model and space and org and user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SearchWeb"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "filter by name",
                        "name": "searchKey",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "space",
                                "model",
                                "org",
                                "user"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "type of space/model/org/user",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "page data size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.SearchDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/session": {
            "put": {
                "description": "logout",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Logout",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.logoutInfo"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "body of login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToLogin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/github_com_openmerlin_merlin-server_session_app.UserDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space": {
            "get": {
                "description": "list global public space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "ListGlobal",
                "parameters": [
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "domain label",
                        "name": "domain",
                        "in": "query"
                    },
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "license label",
                        "name": "license",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pytorch",
                            "mindspore"
                        ],
                        "type": "string",
                        "description": "framework ",
                        "name": "framework",
                        "in": "query"
                    },
                    {
                        "enum": [
                            true,
                            false
                        ],
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "most_likes",
                            "alphabetical",
                            "most_downloads",
                            "recently_updated",
                            "recently_created"
                        ],
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.spacesInfo"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of creating space",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToCreateSpace"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space-app/:owner/:name/spacelog/realtime": {
            "get": {
                "description": "get space app real-time space log",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceAppWeb"
                ],
                "summary": "GetSpaceLog",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.SpaceAppDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space-app/{owner}/{name}": {
            "get": {
                "description": "get space app",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceAppWeb"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.SpaceAppDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space-app/{owner}/{name}/buildlog/realtime": {
            "get": {
                "description": "get space app real-time build log",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceAppWeb"
                ],
                "summary": "GetBuildLog",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.SpaceAppDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space-app/{owner}/{name}/pause": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "stop space app",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            }
        },
        "/v1/space-app/{owner}/{name}/read": {
            "get": {
                "description": "check permission for read space app",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceAppWeb"
                ],
                "summary": "CanRead",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                },
                "x-example": {
                    "data": "successfully"
                }
            }
        },
        "/v1/space-app/{owner}/{name}/restart": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "restart space app",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Post",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                },
                "x-example": {
                    "data": "successfully"
                }
            }
        },
        "/v1/space-app/{owner}/{name}/resume": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "resume space app",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            }
        },
        "/v1/space/:owner/:name/variable-secret": {
            "get": {
                "description": "list space variable secret",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "List",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.SpaceVariableSecretDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space/boutique": {
            "get": {
                "description": "list boutique space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "ListBoutiques",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.spacesRecommendInfo"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space/recommend": {
            "get": {
                "description": "list recommend space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "ListRecommends",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.spacesRecommendInfo"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space/relation/{id}/model": {
            "get": {
                "description": "get models related to a space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "GetModelsBySpaceId",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/app.SpaceModelDTO"
                                            }
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating space",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToUpdateSpace"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/space/{id}/disable": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "disable space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Disable space",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of disable space",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToDisableSpace"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space/{id}/secret/{sid}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete space secret",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "DeleteSecret",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of secret",
                        "name": "sid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/space/{id}/secret/{vid}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update space secret",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "UpdateSecret",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of secret",
                        "name": "sid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating space secret",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToUpdateSpaceSecret"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space/{id}/variable": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create space variable",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "CreateVariable",
                "parameters": [
                    {
                        "description": "body of creating space variable",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToCreateSpaceVariable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space/{id}/variable/{vid}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update space variable",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "UpdateVariable",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of variable",
                        "name": "vid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating space variable",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToUpdateSpaceVariable"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete space variable",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "DeleteVariable",
                "parameters": [
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 20,
                        "type": "string",
                        "description": "id of variable",
                        "name": "vid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/space/{owner}": {
            "get": {
                "description": "list space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "enum": [
                            true,
                            false
                        ],
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "most_likes",
                            "alphabetical",
                            "most_downloads",
                            "recently_updated",
                            "recently_created"
                        ],
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.userSpacesInfo"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space/{owner}/{name}": {
            "get": {
                "description": "get space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "maxLength": 40,
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.spaceDetail"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/space{id}/secret": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create space secret",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "CreateSecret",
                "parameters": [
                    {
                        "description": "body of creating space secret",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToCreateSpaceSecret"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get current sign-in user info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get current user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/github_com_openmerlin_merlin-server_user_app.UserInfoDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update user basic info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "description": "body of updating user",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.userBasicInfoUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "RequestDelete User info",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/user/activity": {
            "get": {
                "description": "get activities",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ActivityWeb"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "filter by space",
                        "name": "space",
                        "in": "query"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "filter by model",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "filter by like",
                        "name": "like",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.ActivitysDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {},
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/user/email/bind": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "bind user's email",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Bind User Email",
                "parameters": [
                    {
                        "description": "body of bind email info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.bindEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/user/email/send": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "send user's email verify code",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Send User Email Verify code",
                "parameters": [
                    {
                        "description": "body of bind email info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.sendEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/user/privacy": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "revoke",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "PrivacyRevoke",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/controller.revokePrivacyInfo"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/user/privilege": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "List User's privilege organization info",
                "tags": [
                    "Organization"
                ],
                "summary": "List User's privilege organization info",
                "parameters": [
                    {
                        "enum": [
                            "npu",
                            "disable"
                        ],
                        "type": "string",
                        "description": "privilege type, can be: npu/disable",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user name to filter the organizations which contain the user",
                        "name": "user",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_openmerlin_merlin-server_user_app.UserDTO"
                                            }
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/user/token": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list all platform tokens of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "GetTokenInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/app.TokenDTO"
                                            }
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create a new platform token of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "CreatePlatformToken",
                "parameters": [
                    {
                        "description": "body of create token",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.tokenCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/app.TokenDTO"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/v1/user/token/{name}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete a new platform token of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "DeletePlatformToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/web/v1/like": {
            "post": {
                "description": "add a like record in the activity table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ActivityWeb"
                ],
                "summary": "Add",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {},
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a like record in the activity table",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ActivityWeb"
                ],
                "summary": "Delete",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controller.ResponseData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string"
                                        },
                                        "data": {},
                                        "msg": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.AccountQuotaDetailDTO": {
            "type": "object",
            "properties": {
                "compute_type": {
                    "type": "string"
                },
                "quota_balance": {
                    "type": "integer"
                },
                "total_quota": {
                    "type": "integer"
                },
                "used_quota": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "app.ActivitySummaryDTO": {
            "type": "object",
            "properties": {
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "model_labels": {
                    "$ref": "#/definitions/app.ModelLabelsDTO"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "resource": {
                    "$ref": "#/definitions/app.ResourceDTO"
                },
                "space_avatar_id": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "app.ActivitysDTO": {
            "type": "object",
            "properties": {
                "activity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.ActivitySummaryDTO"
                    }
                },
                "avatar_id": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.ApproveDTO": {
            "type": "object",
            "properties": {
                "by": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inviter": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "org_full_name": {
                    "type": "string"
                },
                "org_id": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "app.MemberDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "org_fullname": {
                    "type": "string"
                },
                "org_id": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "app.MemberRequestDTO": {
            "type": "object",
            "properties": {
                "by": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "org_id": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "app.ModelLabelsDTO": {
            "type": "object",
            "properties": {
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "library_name": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "others": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "task": {
                    "type": "string"
                }
            }
        },
        "app.OrgCertificateDTO": {
            "type": "object",
            "properties": {
                "certificate_org_name": {
                    "type": "string"
                },
                "certificate_org_type": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "unified_social_credit_code": {
                    "type": "string"
                }
            }
        },
        "app.ResourceDTO": {
            "type": "object",
            "properties": {
                "disable": {
                    "type": "boolean"
                },
                "index": {
                    "type": "integer"
                },
                "owner": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "app.SearchDTO": {
            "type": "object",
            "properties": {
                "result_set": {
                    "$ref": "#/definitions/domain.SearchResult"
                }
            }
        },
        "app.SpaceAppDTO": {
            "type": "object",
            "properties": {
                "app_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "app.SpaceLabelsDTO": {
            "type": "object",
            "properties": {
                "framework": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                }
            }
        },
        "app.SpaceModelDTO": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "app.SpaceVariableSecretDTO": {
            "type": "object",
            "properties": {
                "space_variable_secret": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.SpaceVariableSecretSummary"
                    }
                }
            }
        },
        "app.TokenDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "expired": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "controller.OrgAcceptMemberRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                }
            }
        },
        "controller.OrgApproveMemberRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.OrgInviteMemberRequest": {
            "type": "object",
            "required": [
                "org_name",
                "role",
                "user"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.OrgMemberEditRequest": {
            "type": "object",
            "required": [
                "role",
                "user"
            ],
            "properties": {
                "role": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.OrgReqMemberRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                }
            }
        },
        "controller.OrgRevokeInviteRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.OrgRevokeMemberReqRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.ResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "controller.bindEmailRequest": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "controller.logoutInfo": {
            "type": "object",
            "properties": {
                "id_token": {
                    "type": "string"
                }
            }
        },
        "controller.modelDetail": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "disable": {
                    "type": "boolean"
                },
                "disable_reason": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/app.ModelLabelsDTO"
                },
                "like_count": {
                    "type": "integer"
                },
                "liked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "usage": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.modelInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "disable": {
                    "type": "boolean"
                },
                "disable_reason": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "owner_type": {
                    "type": "integer"
                },
                "task": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "controller.modelRecommendInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "disable": {
                    "type": "boolean"
                },
                "disable_reason": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/app.ModelLabelsDTO"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "usage": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.modelsInfo": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.modelInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.modelsRecommendInfo": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.modelRecommendInfo"
                    }
                }
            }
        },
        "controller.orgBasicInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "allow_request": {
                    "type": "boolean"
                },
                "avatar_id": {
                    "type": "string"
                },
                "default_role": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "controller.orgCertificateRequest": {
            "type": "object",
            "required": [
                "certificate_org_name",
                "certificate_org_type",
                "identity",
                "image_of_certificate",
                "phone",
                "unified_social_credit_code"
            ],
            "properties": {
                "certificate_org_name": {
                    "type": "string"
                },
                "certificate_org_type": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "image_of_certificate": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "unified_social_credit_code": {
                    "type": "string"
                }
            }
        },
        "controller.orgCreateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "controller.orgMemberRemoveRequest": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.reqToCreateModel": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.reqToCreateSpace": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "base_image": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "sdk": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.reqToCreateSpaceSecret": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controller.reqToCreateSpaceVariable": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controller.reqToDisableModel": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                }
            }
        },
        "controller.reqToDisableSpace": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                }
            }
        },
        "controller.reqToLogin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "redirect_uri": {
                    "type": "string"
                }
            }
        },
        "controller.reqToUpdateModel": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.reqToUpdateSpace": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "sdk": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.reqToUpdateSpaceSecret": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controller.reqToUpdateSpaceVariable": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controller.revokePrivacyInfo": {
            "type": "object",
            "properties": {
                "id_token": {
                    "type": "string"
                }
            }
        },
        "controller.sendEmailRequest": {
            "type": "object",
            "required": [
                "capt",
                "email"
            ],
            "properties": {
                "capt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "controller.spaceDetail": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "base_image": {
                    "type": "string"
                },
                "comp_power_allocated": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "disable": {
                    "type": "boolean"
                },
                "disable_reason": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "exception": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_npu": {
                    "type": "boolean"
                },
                "labels": {
                    "$ref": "#/definitions/app.SpaceLabelsDTO"
                },
                "like_count": {
                    "type": "integer"
                },
                "liked": {
                    "type": "boolean"
                },
                "local_cmd": {
                    "type": "string"
                },
                "local_env_info": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "sdk": {
                    "type": "string"
                },
                "space_avatar_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.spaceInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "base_image": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "disable": {
                    "type": "boolean"
                },
                "disable_reason": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/domain.SpaceLabels"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "owner_type": {
                    "type": "integer"
                },
                "space_avatar_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "controller.spaceRecommendInfo": {
            "type": "object",
            "properties": {
                "base_image": {
                    "type": "string"
                },
                "comp_power_allocated": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "disable": {
                    "type": "boolean"
                },
                "disable_reason": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "exception": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_npu": {
                    "type": "boolean"
                },
                "labels": {
                    "$ref": "#/definitions/app.SpaceLabelsDTO"
                },
                "like_count": {
                    "type": "integer"
                },
                "local_cmd": {
                    "type": "string"
                },
                "local_env_info": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "sdk": {
                    "type": "string"
                },
                "space_avatar_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.spacesInfo": {
            "type": "object",
            "properties": {
                "spaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.spaceInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.spacesRecommendInfo": {
            "type": "object",
            "properties": {
                "spaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.spaceRecommendInfo"
                    }
                }
            }
        },
        "controller.tokenCreateRequest": {
            "type": "object",
            "required": [
                "name",
                "perm"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "perm": {
                    "type": "string"
                }
            }
        },
        "controller.tokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                }
            }
        },
        "controller.userBasicInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "revoke_delete": {
                    "type": "boolean"
                }
            }
        },
        "controller.userModelsInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.ModelSummary"
                    }
                },
                "owner": {
                    "type": "string"
                },
                "owner_type": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.userSpacesInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "owner_type": {
                    "type": "integer"
                },
                "spaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.SpaceSummary"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "domain.ModelResult": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "domain.OrgResult": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "domain.SearchResult": {
            "type": "object",
            "properties": {
                "model_result": {
                    "$ref": "#/definitions/domain.SearchResultModel"
                },
                "org_result": {
                    "$ref": "#/definitions/domain.SearchResultOrg"
                },
                "space_result": {
                    "$ref": "#/definitions/domain.SearchResultSpace"
                },
                "user_result": {
                    "$ref": "#/definitions/domain.SearchResultUser"
                }
            }
        },
        "domain.SearchResultModel": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.ModelResult"
                    }
                }
            }
        },
        "domain.SearchResultOrg": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.OrgResult"
                    }
                }
            }
        },
        "domain.SearchResultSpace": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.SpaceResult"
                    }
                }
            }
        },
        "domain.SearchResultUser": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.UserResult"
                    }
                }
            }
        },
        "domain.SpaceLabels": {
            "type": "object",
            "properties": {
                "framework": {
                    "description": "framework",
                    "type": "string"
                },
                "license": {
                    "description": "license label"
                },
                "task": {
                    "description": "task label"
                }
            }
        },
        "domain.SpaceResult": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "domain.UserResult": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "avatar_id": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                }
            }
        },
        "github_com_openmerlin_merlin-server_session_app.UserDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "allow_request": {
                    "type": "boolean"
                },
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "default_role": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "request_delete": {
                    "type": "boolean"
                },
                "request_delete_at": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "github_com_openmerlin_merlin-server_user_app.UserDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "allow_request": {
                    "type": "boolean"
                },
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "default_role": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "request_delete": {
                    "type": "boolean"
                },
                "request_delete_at": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "github_com_openmerlin_merlin-server_user_app.UserInfoDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "allow_request": {
                    "type": "boolean"
                },
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "default_role": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_disable_admin": {
                    "type": "boolean"
                },
                "owner": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "request_delete": {
                    "type": "boolean"
                },
                "request_delete_at": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "repository.ModelSummary": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "disable": {
                    "type": "boolean"
                },
                "disable_reason": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "repository.SpaceSummary": {
            "type": "object",
            "properties": {
                "base_image": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "disable": {
                    "type": "boolean"
                },
                "disable_reason": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/domain.SpaceLabels"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "space_avatar_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "repository.SpaceVariableSecretSummary": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and api Bearer.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "Internal": {
            "description": "Type \"Internal\" followed by a space and internal token.",
            "type": "apiKey",
            "name": "TOKEN",
            "in": "header"
        }
    }
}`

// SwaggerInfoweb holds exported Swagger Info so clients can modify it
var SwaggerInfoweb = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "web",
	SwaggerTemplate:  docTemplateweb,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfoweb.InstanceName(), SwaggerInfoweb)
}
