// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1//request": {
            "delete": {
                "description": "Revoke member request of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "RevokeMember",
                "parameters": [
                    {
                        "description": "body of the member request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgRevokeMemberReqRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "organization name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.ApproveDTO"
                            }
                        }
                    }
                }
            }
        },
        "/v1/account/{name}": {
            "get": {
                "description": "get organization or user info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "GetUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_openmerlin_merlin-server_common_app.UserDTO"
                        }
                    }
                }
            }
        },
        "/v1/invite": {
            "get": {
                "description": "List invitation of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "ListInvitation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization name",
                        "name": "org",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "invitee name",
                        "name": "invitee",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inviter name",
                        "name": "inviter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "invitation status, can be: pending/approved/rejected",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page index",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.ApproveDTO"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Accept invite of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "AcceptInvite",
                "parameters": [
                    {
                        "description": "body of the invitation",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgAcceptMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.ApproveDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Send invitation to a user to join the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "InviteMember",
                "parameters": [
                    {
                        "description": "body of the invitation",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgInviteMemberRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.OrganizationDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Revoke invitation of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "RevokeInvitation",
                "parameters": [
                    {
                        "description": "body of the invitation",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgRevokeInviteRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "organization name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/model": {
            "get": {
                "description": "list global public model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelWeb"
                ],
                "summary": "ListGlobal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task label",
                        "name": "task",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "other labels, separate multiple each ones with commas",
                        "name": "others",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "license label",
                        "name": "license",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "framework labels, separate multiple each ones with commas",
                        "name": "frameworks",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.modelsInfo"
                        }
                    }
                }
            },
            "post": {
                "description": "create model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of creating model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToCreateModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            }
        },
        "/v1/model/{id}": {
            "put": {
                "description": "update model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating model",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToUpdateModel"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of model",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/model/{owner}": {
            "get": {
                "description": "list model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelWeb"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.userModelsInfo"
                        }
                    }
                }
            }
        },
        "/v1/model/{owner}/{name}": {
            "get": {
                "description": "get model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelWeb"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.modelDetail"
                        }
                    }
                }
            }
        },
        "/v1/name": {
            "head": {
                "description": "Check the name is available",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Name"
                ],
                "summary": "Check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "name"
                        }
                    }
                }
            }
        },
        "/v1/organization": {
            "get": {
                "description": "get organization info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filter by owner",
                        "name": "owner",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter by username",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.OrganizationDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create a new organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of new organization",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.orgCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.OrganizationDTO"
                        }
                    }
                }
            }
        },
        "/v1/organization/{name}": {
            "get": {
                "description": "get organization info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.OrganizationDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "update org basic info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of new organization",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.orgBasicInfoUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.OrganizationDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "leave the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Leave",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "delete a organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/organization/{name}/member": {
            "get": {
                "description": "list organization members",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "ListMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.MemberDTO"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Edit a member to the organization's role",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "EditMember",
                "parameters": [
                    {
                        "description": "body of new member",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgMemberEditRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/app.MemberDTO"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a member from a organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "RemoveMember",
                "parameters": [
                    {
                        "description": "body of the removed member",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.orgMemberRemoveRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/request": {
            "get": {
                "description": "List requests of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "ListRequests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization name",
                        "name": "org_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "invitee name",
                        "name": "requester",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "invitation status, can be: pending/approved/rejected",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page index",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.MemberRequestDTO"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Approve a user's member request of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "ApproveRequest",
                "parameters": [
                    {
                        "description": "body of the accept",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgApproveMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.MemberRequestDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "Request to be a member of the organization",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "RequestMember",
                "parameters": [
                    {
                        "description": "body of the member request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.OrgReqMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.OrganizationDTO"
                        }
                    }
                }
            }
        },
        "/v1/session": {
            "put": {
                "description": "logout",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Logout",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.logoutInfo"
                        }
                    }
                }
            },
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "body of login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToLogin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_openmerlin_merlin-server_session_app.UserDTO"
                        }
                    }
                }
            }
        },
        "/v1/space": {
            "get": {
                "description": "list global public space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "ListGlobal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task label",
                        "name": "task",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "other labels, separate multiple each ones with commas",
                        "name": "others",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "license label",
                        "name": "license",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "framework labels, separate multiple each ones with commas",
                        "name": "frameworks",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.spacesInfo"
                        }
                    }
                }
            },
            "post": {
                "description": "create space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of creating space",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToCreateSpace"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            }
        },
        "/v1/space/{id}": {
            "put": {
                "description": "update space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body of updating space",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqToUpdateSpace"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of space",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/space/{owner}": {
            "get": {
                "description": "list space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.userSpacesInfo"
                        }
                    }
                }
            }
        },
        "/v1/space/{owner}/{name}": {
            "get": {
                "description": "get space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceWeb"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.spaceDetail"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "description": "get user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account",
                        "name": "account",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.userDetail"
                        }
                    }
                }
            },
            "put": {
                "description": "update user basic info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "description": "body of updating user",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.userBasicInfoUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controller.ResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/token": {
            "get": {
                "description": "list all platform tokens of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "GetTokenInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.TokenDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create a new platform token of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "CreatePlatformToken",
                "parameters": [
                    {
                        "description": "body of create token",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.tokenCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.TokenDTO"
                        }
                    }
                }
            }
        },
        "/v1/user/token/{name}": {
            "delete": {
                "description": "delete a new platform token of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "DeletePlatformToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v2/model": {
            "get": {
                "description": "list global public model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelRestful"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task label",
                        "name": "task",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "other labels, separate multiple each ones with commas",
                        "name": "others",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "license label",
                        "name": "license",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "framework labels, separate multiple each ones with commas",
                        "name": "frameworks",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ModelsDTO"
                        }
                    }
                }
            }
        },
        "/v2/model/{owner}/{name}": {
            "get": {
                "description": "get model",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "ModelRestful"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of model",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of model",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.ModelDTO"
                        }
                    }
                }
            }
        },
        "/v2/space": {
            "get": {
                "description": "list global public space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceRestful"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task label",
                        "name": "task",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "other labels, separate multiple each ones with commas",
                        "name": "others",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "license label",
                        "name": "license",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "framework labels, separate multiple each ones with commas",
                        "name": "frameworks",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "whether to calculate the total",
                        "name": "count",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort types: most_likes, alphabetical, most_downloads, recently_updated, recently_created",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page num which starts from 1",
                        "name": "page_num",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "count per page",
                        "name": "count_per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.SpacesDTO"
                        }
                    }
                }
            }
        },
        "/v2/space/{owner}/{name}": {
            "get": {
                "description": "get space",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SpaceRestful"
                ],
                "summary": "Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner of space",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of space",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.SpaceDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.ApproveDTO": {
            "type": "object",
            "properties": {
                "by": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "inviter": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "app.MemberDTO": {
            "type": "object",
            "properties": {
                "org_full_name": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "app.MemberRequestDTO": {
            "type": "object",
            "properties": {
                "by": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "app.ModelDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/app.ModelLabelsDTO"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "app.ModelLabelsDTO": {
            "type": "object",
            "properties": {
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "license": {
                    "type": "string"
                },
                "others": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "task": {
                    "type": "string"
                }
            }
        },
        "app.ModelsDTO": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.ModelSummary"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.OrganizationDTO": {
            "type": "object",
            "properties": {
                "allow_request": {
                    "type": "boolean"
                },
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "default_role": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "platform_id": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "app.SpaceDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/app.SpaceLabelsDTO"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "app.SpaceLabelsDTO": {
            "type": "object",
            "properties": {
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "license": {
                    "type": "string"
                },
                "others": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "task": {
                    "type": "string"
                }
            }
        },
        "app.SpacesDTO": {
            "type": "object",
            "properties": {
                "spaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.SpaceSummary"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "app.TokenDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "expired": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "controller.OrgAcceptMemberRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                }
            }
        },
        "controller.OrgApproveMemberRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.OrgInviteMemberRequest": {
            "type": "object",
            "required": [
                "org_name",
                "role",
                "user"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.OrgMemberEditRequest": {
            "type": "object",
            "required": [
                "role",
                "user"
            ],
            "properties": {
                "role": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.OrgReqMemberRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                }
            }
        },
        "controller.OrgRevokeInviteRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.OrgRevokeMemberReqRequest": {
            "type": "object",
            "required": [
                "org_name"
            ],
            "properties": {
                "msg": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.ResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "controller.logoutInfo": {
            "type": "object",
            "properties": {
                "id_token": {
                    "type": "string"
                }
            }
        },
        "controller.modelDetail": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/app.ModelLabelsDTO"
                },
                "like_count": {
                    "type": "integer"
                },
                "liked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.modelInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "controller.modelsInfo": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.modelInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.orgBasicInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "allow_request": {
                    "type": "boolean"
                },
                "avatar_id": {
                    "type": "string"
                },
                "default_role": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "controller.orgCreateRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "controller.orgMemberRemoveRequest": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "type": "string"
                }
            }
        },
        "controller.reqToCreateModel": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "init_readme": {
                    "type": "boolean"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.reqToCreateSpace": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "init_readme": {
                    "type": "boolean"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.reqToLogin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "redirect_uri": {
                    "type": "string"
                }
            }
        },
        "controller.reqToUpdateModel": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.reqToUpdateSpace": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.spaceDetail": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "$ref": "#/definitions/app.SpaceLabelsDTO"
                },
                "like_count": {
                    "type": "integer"
                },
                "liked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "controller.spaceInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "controller.spacesInfo": {
            "type": "object",
            "properties": {
                "spaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controller.spaceInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.tokenCreateRequest": {
            "type": "object",
            "required": [
                "name",
                "perm"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "perm": {
                    "type": "string"
                }
            }
        },
        "controller.userBasicInfoUpdateRequest": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                }
            }
        },
        "controller.userDetail": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "avatar_id": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "controller.userModelsInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.ModelSummary"
                    }
                },
                "owner": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "controller.userSpacesInfo": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "spaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/repository.SpaceSummary"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "github_com_openmerlin_merlin-server_common_app.UserDTO": {
            "type": "object",
            "properties": {
                "allow_request": {
                    "type": "boolean"
                },
                "avatar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "default_role": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "github_com_openmerlin_merlin-server_session_app.UserDTO": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "avatar_id": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "repository.ModelSummary": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "repository.SpaceSummary": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
